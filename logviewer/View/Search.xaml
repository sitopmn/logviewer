<UserControl x:Class="logviewer.View.Search"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="clr-namespace:logviewer.Controls"
             xmlns:converters="clr-namespace:logviewer.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:model="clr-namespace:logviewer.Model"
             xmlns:properties="clr-namespace:logviewer.Properties"
             xmlns:util="clr-namespace:logviewer.core;assembly=logviewer.core"
             xmlns:v="clr-namespace:logviewer.View"
             d:DesignHeight="768"
             d:DesignWidth="1024"
             Foreground="{DynamicResource MaterialDesignBody}"
             mc:Ignorable="d">
    <UserControl.Resources>
        <util:EnumToIntConverter x:Key="EnumToIntConverter" />
        <util:EnumToIconConverter x:Key="EnumToIconConverter" />
        <util:EnumToTextConverter x:Key="EnumToTextConverter" />
        <util:OffsetConverter x:Key="OffsetConverter" />
        <converters:ColumnsConverter x:Key="ColumnsConverter" />
        <converters:ColumnHeaderVisibilityConverter x:Key="ColumnHeaderVisibilityConverter" />
        <Thickness x:Key="ListItemMargin">13 5 5 5</Thickness>

        <ContextMenu x:Key="ListViewContextMenu">
            <MenuItem Header="{x:Static properties:Resources.Search_ShowDetails}"
                      InputGestureText="Ctrl+D"
                      IsEnabled="False">
                <MenuItem.Icon>
                    <material:PackIcon Kind="Information" />
                </MenuItem.Icon>
                F
            </MenuItem>
            <MenuItem Command="{Binding DataContext.CopyDataCommand, RelativeSource={RelativeSource AncestorType=controls:ExtendedListView}}"
                      CommandParameter="{Binding}"
                      Header="{x:Static properties:Resources.Search_Copy}"
                      InputGestureText="Ctrl+C">
                <MenuItem.Icon>
                    <material:PackIcon Kind="ContentCopy" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>

        <ContextMenu x:Key="SearchTextContextMenu">
            <MenuItem Command="Cut">
                <MenuItem.Icon>
                    <material:PackIcon Kind="ContentCut" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="Copy">
                <MenuItem.Icon>
                    <material:PackIcon Kind="ContentCopy" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="Paste">
                <MenuItem.Icon>
                    <material:PackIcon Kind="ContentPaste" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>

    </UserControl.Resources>
    <UserControl.InputBindings>
        <KeyBinding Key="F5"
                    Command="{Binding UpdateCommand}" />
    </UserControl.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <DockPanel Grid.Row="0"
                   LastChildFill="True"
                   Style="{StaticResource MaterialDesignToolBarDockPanel}">
            <Button Command="{Binding NavigateBackwardCommand}"
                    DockPanel.Dock="Left">
                <material:PackIcon Width="24"
                                   Height="24"
                                   Kind="StepBackward" />
            </Button>
            <Button Command="{Binding NavigateForwardCommand}"
                    DockPanel.Dock="Left">
                <material:PackIcon Width="24"
                                   Height="24"
                                   Kind="StepForward" />
            </Button>
            <Separator DockPanel.Dock="Left" />

            <Button Click="ResetZoomAndPanButton_Click"
                    DockPanel.Dock="Right"
                    IsEnabled="{Binding Chart.Series.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}"
                    ToolTip="{x:Static properties:Resources.Search_ResetZoomAndPan}">
                <material:PackIcon VerticalAlignment="Center"
                                   Kind="BackupRestore" />
            </Button>

            <Button Command="{Binding SaveDataCommand}"
                    DockPanel.Dock="Right"
                    ToolTip="{x:Static properties:Resources.Search_SaveToFile}">
                <material:PackIcon VerticalAlignment="Center"
                                   Kind="FileExcel" />
            </Button>

            <Separator DockPanel.Dock="Right" />

            <Button Command="{Binding UpdateCommand}"
                    DockPanel.Dock="Right"
                    ToolTip="{x:Static properties:Resources.Search_RunQuery}">
                <material:PackIcon Width="24"
                                   Height="24">
                    <material:PackIcon.Style>
                        <Style TargetType="material:PackIcon">
                            <Setter Property="Kind" Value="Play" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsUpdating}"
                                             Value="True">
                                    <Setter Property="Kind" Value="CloseOctagon" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </material:PackIcon.Style>
                </material:PackIcon>
            </Button>

            <Grid x:Name="SearchGrid"
                  VerticalAlignment="Center">
                <TextBox x:Name="SearchText"
                         Margin="5 0 5 0"
                         material:HintAssist.Hint="{x:Static properties:Resources.Search_Prompt}"
                         AcceptsReturn="True"
                         ContextMenu="{StaticResource SearchTextContextMenu}"
                         FontFamily="{StaticResource MaterialDesignFontMono}"
                         MaxLines="1"
                         Text="{Binding UserQuery, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Return"
                                    Command="{Binding UpdateCommand}" />
                    </TextBox.InputBindings>
                </TextBox>
                <ToggleButton Margin="0 0 8 0"
                              HorizontalAlignment="Right"
                              IsChecked="{Binding IsOpen, ElementName=SearchPopup}"
                              Style="{StaticResource MaterialDesignToolToggleButton}">
                    <material:PackIcon Width="12"
                                       Height="12"
                                       Kind="ArrowExpandDown" />
                </ToggleButton>
            </Grid>
        </DockPanel>
        <Popup x:Name="SearchPopup"
               Placement="Relative"
               PlacementTarget="{Binding ElementName=SearchGrid}"
               PopupAnimation="Slide"
               StaysOpen="False">
            <Grid Background="{DynamicResource MaterialDesignToolBarBackground}">
                <TextBox Width="{Binding ActualWidth, ElementName=SearchText}"
                         MinHeight="200"
                         Margin="5"
                         VerticalAlignment="Stretch"
                         material:HintAssist.Hint="{x:Static properties:Resources.Search_Prompt}"
                         AcceptsReturn="True"
                         AcceptsTab="True"
                         FontFamily="{StaticResource MaterialDesignFontMono}"
                         Text="{Binding UserQuery, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}" />
            </Grid>
        </Popup>
        <controls:ExtendedListView x:Name="ListView"
                                   Grid.Row="2"
                                   VerticalAlignment="Stretch"
                                   util:ScrollViewerExtensions.VerticalOffset="{Binding VerticalScrollOffset}"
                                   ItemsSource="{Binding Rows}"
                                   ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                   ScrollViewer.VerticalScrollBarVisibility="Visible"
                                   SelectedItem="{Binding SelectedLogItem}"
                                   SelectionMode="Single"
                                   Style="{StaticResource MaterialDesignListView}">
            <controls:ExtendedListView.Resources>
                <util:BindingProxy x:Key="ColumnCollection"
                                   Data="{Binding Columns, Converter={StaticResource ColumnsConverter}}" />
            </controls:ExtendedListView.Resources>
            <controls:ExtendedListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <controls:VirtualizingHeaderPanel IsItemsHost="True">
                        <controls:VirtualizingHeaderPanel.Headers>
                            <v:ChartEditor Margin="5"
                                           controls:VirtualizingHeaderPanel.IsStickyHorizontally="True"
                                           util:VisibilityExtensions.IsCollapsed="{Binding Data.Count, Converter={StaticResource LessThanConverter}, ConverterParameter=2, Source={StaticResource ColumnCollection}}"
                                           Background="{DynamicResource MaterialDesignPaper}"
                                           DataContext="{Binding Chart}" />
                            <v:ChartViewer x:Name="ChartViewer"
                                           Margin="5 0 5 5"
                                           controls:VirtualizingHeaderPanel.IsStickyHorizontally="True"
                                           Background="{DynamicResource MaterialDesignPaper}"
                                           DataContext="{Binding Chart}"
                                           Grid.IsSharedSizeScope="True"
                                           Loaded="ChartViewer_Loaded" />
                            <Border controls:VirtualizingHeaderPanel.IsStickyVertically="True"
                                    Background="{DynamicResource MaterialDesignPaper}"
                                    BorderBrush="{DynamicResource MaterialDesignDivider}"
                                    BorderThickness="0 0 0 1">
                                <!--  Visibility="{Binding Columns, Converter={StaticResource ColumnHeaderVisibilityConverter}}"  -->
                                <GridViewHeaderRowPresenter AllowsColumnReorder="False"
                                                            Columns="{Binding Data, Source={StaticResource ColumnCollection}}"
                                                            SnapsToDevicePixels="True">
                                    <GridViewHeaderRowPresenter.ColumnHeaderTemplate>
                                        <DataTemplate DataType="{x:Type model:ColumnData}">
                                            <TextBlock Text="{Binding HeaderText}" />
                                        </DataTemplate>
                                    </GridViewHeaderRowPresenter.ColumnHeaderTemplate>
                                    <GridViewHeaderRowPresenter.ColumnHeaderContainerStyle>
                                        <Style BasedOn="{StaticResource {x:Type GridViewColumnHeader}}"
                                               TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="util:DragDropExtensions.DragData" Value="{Binding Content, RelativeSource={RelativeSource Self}}" />
                                            <Setter Property="util:DragDropExtensions.DragFormat" Value="ColumnHeader" />
                                        </Style>
                                    </GridViewHeaderRowPresenter.ColumnHeaderContainerStyle>
                                </GridViewHeaderRowPresenter>
                            </Border>
                        </controls:VirtualizingHeaderPanel.Headers>
                    </controls:VirtualizingHeaderPanel>
                </ItemsPanelTemplate>
            </controls:ExtendedListView.ItemsPanel>
            <controls:ExtendedListView.ItemContainerStyle>
                <Style BasedOn="{StaticResource MaterialDesignListBoxItem}"
                       TargetType="ListBoxItem">
                    <Setter Property="ContextMenu" Value="{StaticResource ListViewContextMenu}" />
                    <EventSetter Event="PreviewMouseDoubleClick"
                                 Handler="ListViewItem_MouseDoubleClick" />
                </Style>
            </controls:ExtendedListView.ItemContainerStyle>
            <controls:ExtendedListView.ItemTemplate>
                <DataTemplate>
                    <GridViewRowPresenter Columns="{Binding Data, Source={StaticResource ColumnCollection}}"
                                          TextBlock.FontFamily="{StaticResource MaterialDesignFontMono}" />
                </DataTemplate>
            </controls:ExtendedListView.ItemTemplate>
            <controls:ExtendedListView.InputBindings>
                <KeyBinding Key="C"
                            Command="{Binding CopyDataCommand}"
                            CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType=controls:ExtendedListView}}"
                            Modifiers="Ctrl" />
            </controls:ExtendedListView.InputBindings>
        </controls:ExtendedListView>

        <Popup x:Name="DetailsPopup"
               MaxWidth="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=UserControl}}"
               MouseUp="DetailsPopup_MouseUp"
               Placement="Center"
               PopupAnimation="Fade"
               StaysOpen="False">
            <Grid Background="{DynamicResource MaterialDesignToolBarBackground}">
                <ItemsControl x:Name="DetailsList"
                              AlternationCount="10">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid x:Name="ItemGrid"
                                  Background="Transparent">
                                <TextBlock Margin="{StaticResource ListItemMargin}"
                                           Padding="5 0 0 0"
                                           FontFamily="{StaticResource MaterialDesignFontMono}"
                                           Text="{Binding Message}" />
                            </Grid>
                            <DataTemplate.Triggers>
                                <Trigger Property="ItemsControl.AlternationIndex" Value="5">
                                    <Setter TargetName="ItemGrid" Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
                                </Trigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <Button x:Name="SearchButton"
                        Margin="0 0 8 0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Click="SearchButton_Click"
                        Foreground="{DynamicResource MaterialDesignBody}"
                        Style="{StaticResource MaterialDesignToolButton}">
                    <material:PackIcon Width="24"
                                       Height="24"
                                       Kind="Play" />
                </Button>
            </Grid>
        </Popup>
    </Grid>
</UserControl>
