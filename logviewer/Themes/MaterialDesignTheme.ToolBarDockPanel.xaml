<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controlz="clr-namespace:ControlzEx;assembly=MaterialDesignThemes.Wpf"
                    xmlns:v="clr-namespace:logviewer.View"
                    xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.CheckBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.ComboBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Menu.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.RadioButton.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.Button.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.ToggleButton.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.Font.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.ListBox.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="MaterialDesignToolBarDockPanel"
           TargetType="{x:Type DockPanel}">
        <Setter Property="Background" Value="{DynamicResource MaterialDesignToolBarBackground}" />
        <Setter Property="LastChildFill" Value="True" />
        <Style.Resources>

            <Style TargetType="{x:Type wpf:PopupBox}">
                <Setter Property="ToggleContent" Value="{StaticResource MaterialDesignPopupBoxToggleContent}" />
                <Setter Property="wpf:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignFlatButtonRipple}" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="wpf:ShadowAssist.ShadowDepth" Value="Depth3" />
                <Setter Property="TextElement.FontWeight" Value="Normal" />
                <Setter Property="Padding" Value="0 8 0 8" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type wpf:PopupBox}">
                            <ControlTemplate.Resources>
                                <Style BasedOn="{StaticResource MaterialDesignSeparator}"
                                       TargetType="Separator" />
                                <Style x:Key="ToggleButtonStyle"
                                       TargetType="ToggleButton">
                                    <Setter Property="BorderThickness" Value="1" />
                                    <Setter Property="Padding" Value="16" />
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="TextBlock.FontWeight" Value="DemiBold" />
                                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                                    <Setter Property="wpf:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignFlatButtonRipple}" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Border x:Name="border"
                                                        Background="Transparent"
                                                        CornerRadius="2">
                                                    <wpf:Ripple Padding="{TemplateBinding Padding}"
                                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                Content="{TemplateBinding Content}"
                                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                Feedback="{TemplateBinding Foreground}"
                                                                Focusable="False"
                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsEnabled" Value="false">
                                                        <Setter Property="Opacity" Value=".56" />
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="true">
                                                        <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource MaterialDesignFlatButtonClick}" />
                                                        <Setter TargetName="border" Property="Background" Value="{DynamicResource MaterialDesignFlatButtonClick}" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ControlTemplate.Resources>
                            <Grid>
                                <ToggleButton x:Name="PART_Toggle"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding ToggleContent}"
                                              ContentTemplate="{TemplateBinding ToggleContentTemplate}"
                                              IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}"
                                              Style="{StaticResource ToggleButtonStyle}" />
                                <controlz:PopupEx x:Name="PART_Popup"
                                                  AllowsTransparency="True"
                                                  CustomPopupPlacementCallback="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PopupPlacementMethod}"
                                                  HorizontalOffset="5"
                                                  IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}"
                                                  Placement="Custom"
                                                  PlacementTarget="{Binding ElementName=PART_Toggle}"
                                                  PopupAnimation="Fade"
                                                  VerticalOffset="5">
                                    <wpf:Card Margin="5"
                                              Padding="{TemplateBinding Padding}"
                                              Content="{TemplateBinding PopupContent}"
                                              ContentTemplate="{TemplateBinding PopupContentTemplate}"
                                              FontSize="15"
                                              FontWeight="Regular"
                                              Foreground="{DynamicResource MaterialDesignBody}"
                                              RenderOptions.ClearTypeHint="Enabled">
                                        <wpf:Card.Resources>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="VerticalContentAlignment" Value="Bottom" />
                                                <Setter Property="HorizontalContentAlignment" Value="Left" />
                                                <Setter Property="Padding" Value="16 0 16 16" />
                                                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border x:Name="MouseOverBorder"
                                                                        Background="{TemplateBinding Foreground,
                                                                                                     Converter={StaticResource BrushRoundConverter}}"
                                                                        Opacity="0" />
                                                                <wpf:Ripple MinHeight="48"
                                                                            Padding="{TemplateBinding Padding}"
                                                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                            Content="{TemplateBinding Content}"
                                                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                                            Feedback="{TemplateBinding Foreground,
                                                                                                       Converter={StaticResource BrushRoundConverter}}"
                                                                            Focusable="False"
                                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                <VisualStateManager.VisualStateGroups>
                                                                    <VisualStateGroup Name="CommonStates">
                                                                        <VisualStateGroup.Transitions>
                                                                            <VisualTransition GeneratedDuration="0:0:0.3"
                                                                                              To="Normal">
                                                                                <VisualTransition.GeneratedEasingFunction>
                                                                                    <CircleEase EasingMode="EaseOut" />
                                                                                </VisualTransition.GeneratedEasingFunction>
                                                                            </VisualTransition>
                                                                        </VisualStateGroup.Transitions>
                                                                        <VisualState Name="Normal" />
                                                                        <VisualState Name="MouseOver">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Storyboard.TargetName="MouseOverBorder"
                                                                                                 Storyboard.TargetProperty="Opacity"
                                                                                                 To="0.1"
                                                                                                 Duration="0" />
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState Name="Disabled">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                                                 To="0.48"
                                                                                                 Duration="0" />
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                    </VisualStateGroup>
                                                                </VisualStateManager.VisualStateGroups>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </wpf:Card.Resources>
                                    </wpf:Card>
                                </controlz:PopupEx>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" Value="0.23" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type wpf:PackIcon}">
                <Setter Property="Width" Value="22" />
                <Setter Property="Height" Value="22" />
            </Style>

            <Style BasedOn="{StaticResource MaterialDesignToolToggleFlatListBox}"
                   TargetType="ListBox">
                <Setter Property="wpf:ListBoxAssist.IsToggle" Value="False" />
                <Setter Property="v:ListBoxAssist.IsToggle" Value="True" />
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style BasedOn="{StaticResource MaterialDesignToolToggleListBoxItem}"
                               TargetType="ListBoxItem">
                            <Setter Property="TextBlock.FontWeight" Value="DemiBold" />
                            <Setter Property="TextBlock.FontSize" Value="18" />
                            <Setter Property="MinWidth" Value="54" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="Padding" Value="16" />
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style BasedOn="{StaticResource MaterialDesignCheckBox}"
                   TargetType="{x:Type CheckBox}">
                <Setter Property="Margin" Value="8 0 8 0" />
            </Style>

            <Style BasedOn="{StaticResource MaterialDesignComboBox}"
                   TargetType="{x:Type ComboBox}">
                <Setter Property="Margin" Value="8 0 8 0" />
            </Style>

            <Style BasedOn="{StaticResource MaterialDesignMenu}"
                   TargetType="{x:Type Menu}">
                <Setter Property="Margin" Value="8 0 8 0" />
            </Style>

            <Style BasedOn="{StaticResource MaterialDesignRadioButton}"
                   TargetType="{x:Type RadioButton}">
                <Setter Property="Margin" Value="8 0 8 0" />
            </Style>

            <Style TargetType="Separator">
                <Setter Property="Background" Value="{DynamicResource MaterialDesignDivider}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignDivider}" />
                <Setter Property="Height" Value="32" />
                <Setter Property="Width" Value="1" />
                <Setter Property="Margin" Value="6 11 6 11" />
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style BasedOn="{StaticResource MaterialDesignTextBox}"
                   TargetType="{x:Type TextBox}">
                <Setter Property="Margin" Value="8 0 8 0" />
            </Style>

            <Style BasedOn="{StaticResource MaterialDesignSwitchToggleButton}"
                   TargetType="{x:Type ToggleButton}">
                <Setter Property="Margin" Value="8 0 8 0" />
            </Style>

            <Style TargetType="Button">
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Padding" Value="16" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="TextBlock.FontWeight" Value="DemiBold" />
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                <Setter Property="wpf:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignFlatButtonRipple}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border"
                                    Background="Transparent"
                                    CornerRadius="2">
                                <wpf:Ripple Padding="{TemplateBinding Padding}"
                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Content="{TemplateBinding Content}"
                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                            Feedback="{TemplateBinding Foreground}"
                                            Focusable="False"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" Value=".56" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource MaterialDesignFlatButtonClick}" />
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource MaterialDesignFlatButtonClick}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
    </Style>
</ResourceDictionary>
