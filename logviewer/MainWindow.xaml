<Window x:Class="logviewer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="clr-namespace:logviewer.Controls"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="clr-namespace:logviewer.Interfaces;assembly=logviewer.core"
        xmlns:m="clr-namespace:logviewer.Model"
        xmlns:markdig="clr-namespace:Markdig.Wpf;assembly=Markdig.Wpf"
        xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:properties="clr-namespace:logviewer.Properties"
        xmlns:util="clr-namespace:logviewer.core;assembly=logviewer.core"
        xmlns:v="clr-namespace:logviewer.View"
        Title="LOG VIEWER"
        Width="800"
        Height="450"
        util:DragDropExtensions.DropCommand="{Binding OpenCommand}"
        util:DragDropExtensions.DropFormat="FileDrop"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        Foreground="{DynamicResource MaterialDesignBody}"
        TextBlock.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontSize="13"
        TextElement.FontWeight="Regular"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        mc:Ignorable="d">
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="40"
                      CornerRadius="0"
                      GlassFrameThickness="0"
                      NonClientFrameEdges="None"
                      ResizeBorderThickness="5"
                      UseAeroCaptionButtons="False" />
    </WindowChrome.WindowChrome>
    <Window.Resources>

        <Style x:Key="MaterialWindowButton"
               TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ContentControl}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                            <Border x:Name="HoverBorder"
                                    Background="White"
                                    IsHitTestVisible="False"
                                    Opacity="0.1"
                                    Visibility="Hidden" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}"
                                         Value="True">
                                <Setter TargetName="HoverBorder" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MaterialWindowHeader"
               TargetType="ContentControl">
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}"
                             Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="T"
                    Command="{Binding OpenTabCommand}"
                    CommandParameter="{x:Null}"
                    Modifiers="Ctrl" />
        <KeyBinding Key="W"
                    Command="{Binding CloseTabCommand}"
                    CommandParameter="{Binding CurrentTab}"
                    Modifiers="Ctrl" />
        <KeyBinding Key="W"
                    Command="{Binding OpenTabCommand}"
                    CommandParameter="{Binding CurrentTab}"
                    Modifiers="Ctrl" />
        <KeyBinding Key="O"
                    Command="{Binding OpenCommand}"
                    Modifiers="Ctrl" />
        <KeyBinding Key="I"
                    Command="{Binding ReindexCommand}"
                    Modifiers="Ctrl" />
    </Window.InputBindings>
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static markdig:Commands.Hyperlink}"
                        Executed="HyperlinkCommand_Executed" />
    </Window.CommandBindings>
    <Border x:Name="MaximizeBorder">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="40" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!--  window header buttons  -->
            <ContentControl x:Name="WindowHeader"
                            Grid.Row="0"
                            HorizontalAlignment="Right"
                            Panel.ZIndex="2"
                            SnapsToDevicePixels="True"
                            Style="{StaticResource MaterialWindowHeader}">
                <StackPanel Orientation="Horizontal">
                    <Button x:Name="MinimizeButton"
                            Width="50"
                            Click="MinimizeButton_Click"
                            Style="{StaticResource MaterialWindowButton}"
                            WindowChrome.IsHitTestVisibleInChrome="True">
                        <material:PackIcon Kind="WindowMinimize" />
                    </Button>
                    <Button x:Name="RestoreButton"
                            Width="50"
                            Click="RestoreButton_Click"
                            Style="{StaticResource MaterialWindowButton}"
                            WindowChrome.IsHitTestVisibleInChrome="True">
                        <material:PackIcon Kind="WindowRestore" />
                    </Button>
                    <Button x:Name="CloseButton"
                            Width="50"
                            Click="CloseButton_Click"
                            Style="{StaticResource MaterialWindowButton}"
                            WindowChrome.IsHitTestVisibleInChrome="True">
                        <material:PackIcon Kind="WindowClose" />
                    </Button>
                </StackPanel>
            </ContentControl>

            <material:DrawerHost Grid.Row="0"
                                 Grid.RowSpan="2">
                <material:DrawerHost.LeftDrawerContent>
                    <v:Navigation />
                </material:DrawerHost.LeftDrawerContent>
                <material:DialogHost SnackbarMessageQueue="{Binding MessageQueue}">
                    <material:DialogHost.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.MergedDictionaries>
                                <ResourceDictionary Source="View/Dialogs.xaml" />
                            </ResourceDictionary.MergedDictionaries>
                        </ResourceDictionary>
                    </material:DialogHost.Resources>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <!--  window header bar  -->
                        <Grid Grid.Row="0"
                              Background="{DynamicResource PrimaryHueDarkBrush}"
                              SnapsToDevicePixels="True" />

                        <!--  navigation drawer and main content  -->
                        <controls:MaterialTabControl x:Name="TabControl"
                                                     Grid.Row="1"
                                                     Grid.RowSpan="2"
                                                     Margin="0 -40 0 0"
                                                     Foreground="{DynamicResource MaterialDesignBody}"
                                                     HeaderForeground="{Binding Foreground, ElementName=WindowHeader}"
                                                     ItemsSource="{Binding Tabs}"
                                                     SelectedItem="{Binding CurrentTab}">
                            <controls:MaterialTabControl.BeforeTabStripContent>
                                <ToggleButton Width="32"
                                              Height="32"
                                              Margin="8 0 8 0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Cursor="Hand"
                                              IsChecked="{Binding IsLeftDrawerOpen, RelativeSource={RelativeSource AncestorType=material:DrawerHost}}"
                                              Style="{StaticResource MaterialDesignHamburgerToggleButton}"
                                              ToolTip="Open menu" />
                            </controls:MaterialTabControl.BeforeTabStripContent>
                            <controls:MaterialTabControl.AfterTabStripContent>
                                <Button Margin="8 0 8 0"
                                        Command="{Binding OpenTabCommand}"
                                        CommandParameter="{x:Null}"
                                        Style="{StaticResource MaterialDesignToolForegroundButton}"
                                        ToolTip="{x:Static properties:Resources.Menu_CreateTab}">
                                    <material:PackIcon Width="16"
                                                       Height="16"
                                                       Kind="Plus" />
                                </Button>
                            </controls:MaterialTabControl.AfterTabStripContent>
                            <controls:MaterialTabControl.ItemContainerStyle>
                                <Style BasedOn="{StaticResource MaterialTabItemStyle}"
                                       TargetType="TabItem">
                                    <Setter Property="Header" Value="{Binding}" />
                                    <Setter Property="Tag" Value="{Binding ElementName=TabControl}" />
                                    <Setter Property="ContextMenu">
                                        <Setter.Value>
                                            <ContextMenu>
                                                <MenuItem Command="{Binding PlacementTarget.Tag.DataContext.CloseTabCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                                          CommandParameter="{Binding}"
                                                          Header="{x:Static properties:Resources.Menu_CloseTab}"
                                                          InputGestureText="Ctrl+W" />
                                                <MenuItem Command="{Binding PlacementTarget.Tag.DataContext.OpenTabCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                                          CommandParameter="{Binding Model}"
                                                          Header="{x:Static properties:Resources.Menu_DuplicateTab}"
                                                          InputGestureText="Ctrl+D" />
                                                <MenuItem Command="{Binding PlacementTarget.Tag.DataContext.OpenTabCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                                          CommandParameter="{x:Null}"
                                                          Header="{x:Static properties:Resources.Menu_CreateTab}"
                                                          InputGestureText="Ctrl+T" />
                                            </ContextMenu>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="HeaderTemplate">
                                        <Setter.Value>
                                            <DataTemplate DataType="{x:Type i:IPageView}">
                                                <Grid HorizontalAlignment="Stretch">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <material:PackIcon Width="16"
                                                                       Height="16"
                                                                       VerticalAlignment="Center"
                                                                       Kind="{Binding Icon}" />
                                                    <TextBlock Grid.Column="1"
                                                               Margin="8 0 8 0"
                                                               HorizontalAlignment="Center"
                                                               VerticalAlignment="Center"
                                                               Text="{Binding Title}" />
                                                    <Button x:Name="DeleteButton"
                                                            Grid.Column="2"
                                                            material:RippleAssist.IsDisabled="True"
                                                            Command="{Binding DataContext.CloseTabCommand, RelativeSource={RelativeSource AncestorType=controls:MaterialTabControl}}"
                                                            CommandParameter="{Binding}"
                                                            Style="{StaticResource MaterialDesignToolForegroundButton}"
                                                            ToolTip="{x:Static properties:Resources.Menu_CloseTab}"
                                                            Visibility="Hidden">
                                                        <material:PackIcon Width="16"
                                                                           Height="16"
                                                                           Kind="Close" />
                                                    </Button>
                                                </Grid>
                                                <DataTemplate.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=TabItem}}" Value="True" />
                                                            <Condition Binding="{Binding IsEnabled, ElementName=DeleteButton}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter TargetName="DeleteButton" Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </controls:MaterialTabControl.ItemContainerStyle>
                        </controls:MaterialTabControl>

                        <ProgressBar Grid.Row="1"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="Top"
                                     Panel.ZIndex="5000"
                                     util:VisibilityExtensions.IsVisible="{Binding IsUpdating}"
                                     IsIndeterminate="{Binding IsReportingProgress, Converter={StaticResource BooleanInverter}}"
                                     Maximum="100"
                                     Minimum="0"
                                     Value="{Binding UpdateProgress, Mode=OneWay}" />
                        <material:Snackbar Grid.Row="1"
                                           Grid.ColumnSpan="2"
                                           Margin="70 0 70 0"
                                           HorizontalAlignment="Stretch"
                                           VerticalAlignment="Bottom"
                                           MessageQueue="{Binding MessageQueue}" />
                    </Grid>
                </material:DialogHost>
            </material:DrawerHost>
        </Grid>
    </Border>
</Window>
