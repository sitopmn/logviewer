using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

namespace logviewer.Interfaces
{
    /// <summary>
    /// Interface providing access to a queried log
    /// </summary>
    public interface IQuery : IReadOnlyList<ILogItem>
    {
        #region properties

        /// <summary>
        /// Gets a list of columns generated by the query
        /// </summary>
        IDictionary<string, Type> Columns { get; }

        #endregion

        #region public methods

        /// <summary>
        /// Gets the index of a log item
        /// </summary>
        /// <param name="item">The log item to search</param>
        /// <returns>The index of the given item or -1 if it is not found</returns>
        int IndexOf(ILogItem item);

        /// <summary>
        /// Executes the query
        /// </summary>
        void Update(Action<double> progress, CancellationToken cancellation);

        /// <summary>
        /// Skips the given number of items and returns the remaining items
        /// </summary>
        /// <param name="count">Number of items to skip</param>
        /// <returns>Enumerable returning the remaining items</returns>
        IEnumerable<ILogItem> Skip(int count);

        #endregion

    }
}
